#!/bin/bash

set -e

cd "${1}"

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

set +x
# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > "${payload}" <&0

chat_url="$(jq -r '.source.url' < "${payload}")"
user="$(jq -r '.source.user' < "${payload}")"
password="$(jq -r '.source.password' < "${payload}")"
channel="$(jq -r '.params.channel' < "${payload}")"
message="$(jq -r '.params.message' < "${payload}")"


curl -X POST -k ${chat_url}/api/v1/login -d "user=${user}&password=${password}" > rocket.chat.auth
export chat_userId=$(cat rocket.chat.auth | jq -r '.data.userId')
export chat_authToken=$(cat rocket.chat.auth | jq -r '.data.authToken')

body="$(cat <<EOF
{
  "channel": "${channel}",
  "text": "${message}"
}
EOF
  )"
send_data="$(echo "${body}" | jq -c '.')"

echo ${send_data}

curl -H "X-Auth-Token: ${chat_authToken}" -H "X-User-Id: ${chat_userId}" -H "Content-type:application/json" -k ${chat_url}/api/v1/chat.postMessage -d "${send_data}"

metadata="$(cat <<EOF
{
  "metadata": [
    {"name": "url",               "value": "${chat_url}"},
    {"name": "channel",           "value": "${channel}"          },
    {"name": "user",          "value": "${user}"            },
    {"name": "text",              "value": "${message}"                }
  ]
}
EOF
  )"

#echo ${metadata}

timestamp="$(jq -n "{version:{timestamp:\"$(date +%s)\"}}")"
echo "$timestamp $metadata " | jq -s add  >&3